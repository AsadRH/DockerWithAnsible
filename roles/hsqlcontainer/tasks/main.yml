    - name: Ensure git is installed or not
      yum:
        list: git
      register: is_installed

    - name: Installing git if not exist
      yum:
        name: git
        state: present
      when: (is_installed.results|length == 1) or (is_installed.results[1].yumstate != 'installed')

   # - name: Generate SSH keys
   #   shell: ssh-keygen -b 2048 -t rsa -f /home/ec2-user/.ssh/id_rsa -q -N ""
   #   args:
   #     creates: /home/ec2-user/.ssh/id_rsa

   # - name: "Create the Bitbucket SSH public key file"
   #   copy:
   #     dest: /home/ec2-user/.ssh/id_rsa_bitbucket.pub
   #     mode: 0600
   #     src: /home/ec2-user/.ssh/id_rsa.pub
       # dest: /root/.ssh/id_rsa_bitbucket.pub
       # src: /root/.ssh/id_rsa.pub
       

   # - name: "Create the Bitbucket SSH private key file"
   #   copy:
   #     dest: /home/ec2-user/.ssh/id_rsa_bitbucket
   #     mode: 0600
   #     src: /home/ec2-user/.ssh/id_rsa
       # dest: /root/.ssh/id_rsa_bitbucket
       # mode: 0600
       # src: /root/.ssh/id_rsa

    - name: "setup the git repo"
      git:
        repo: "{{ repo }}"
        dest: "{{ repo_Save_dest }}"
        accept_hostkey: true
        force: true
        key_file: "{{ key_file_path }}"
        clone: yes
        version: "{{ repo_version }}"

    - name: Ensure docker is installed or not
      yum:
        list: docker
      register: is_installed_docker

    - name: Installing docker if not exist
      yum:
        name: docker
        state: present
      when: (is_installed_docker.results|length == 1) or (is_installed_docker.results[1].yumstate != 'installed')

    - name: start docker
      shell: sudo service docker start

   # - name: Enabling epel repo and installing pip
   #   command: sudo yum install epel-release

    - name: Enabling epel repo and installing pip
      yum:
        name: python-pip
        state: present
#      command: sudo yum install python-pip

    - pip:
        name: docker-py

    - name: Ensure Docker image is build from the hsql Dockerfile.
      docker_image:
        name: "{{ image_name }}"
        tag: "{{ image_tag }}"
        path: "{{ dockerfile_path }}"
        state: present
        buildargs:
           log_volume: "{{ log_path }}"

    - name: Run hsql container
      shell: "sudo docker run --name {{ container_name }} -d -p {{ container_port}}/tcp  {{ image_name }}:{{ image_tag }}"
    #  docker_container:
    #    name: "{{ container_name }}"
    #    image: "{{ container_img }}"
    #    state: started
    #    ports:
    #     - "{{ container_port }}"
